---
- hosts: all
  become: yes
  tasks:
    #CREATE SSH KEY
    - name: Create a 4096-bit SSH key for user root
      user:
          name: root
          generate_ssh_key: yes
          ssh_key_bits: 4096
          ssh_key_file: .ssh/id_rsa

    #ADD REPOS
    - apt_repository:
        repo: ppa:numix/ppa
        codename: bionic

    - apt_repository:
        repo: ppa:system76/pop
        codename: bionic

    - apt_repository:
        repo: ppa:system76-dev/stable
        codename: bionic

    - apt_repository:
        repo: ppa:git-core/ppa
        codename: bionic

    - apt_repository:
        repo: ppa:papirus/papirus
        codename: bionic

    - apt_repository:
        repo: ppa:nilarimogard/webupd8
        codename: bionic

    #Google Chrome
    - apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    - apt_repository:
        repo: deb http://dl.google.com/linux/chrome/deb/ stable main
        state: present

    #Sublime Text & Sublime Merge
    - apt_key:
        url: https://download.sublimetext.com/sublimehq-pub.gpg
        state: present

    - apt_repository:
        repo: 'deb https://download.sublimetext.com/ apt/stable/'
        state: present

    #SyncThing
    - apt_key:
        url: https://syncthing.net/release-key.txt
        state: present

    - apt_repository:
        repo: 'deb https://apt.syncthing.net/ syncthing stable'
        state: present

    #Spotify
    - apt_key:
        # keyserver: hkp://keyserver.ubuntu.com:80
        # id: 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90
        url: https://download.spotify.com/debian/pubkey.gpg
        state: present

    - apt_repository:
        repo: 'deb http://repository.spotify.com stable non-free'
        state: present

    #Virtualbox
    - apt_key:
        url: https://www.virtualbox.org/download/oracle_vbox_2016.asc
        state: present

    - apt_key:
        url: https://www.virtualbox.org/download/oracle_vbox.asc
        state: present

    - apt_repository:
        repo: 'deb https://download.virtualbox.org/virtualbox/debian bionic contrib'
        state: present

    #Docker
    - apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
       
    - apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'
          state : present
      when: ansible_distribution == 'Linux Mint'

    - apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state : present
      when: ansible_distribution == 'Ubuntu'

    #GCLOUD SDK
    - apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
       
    - apt_repository:
          repo: 'deb http://packages.cloud.google.com/apt cloud-sdk-bionic main'
          state : present
      when: ansible_distribution == 'Linux Mint'

    - apt_repository:
          repo: 'deb http://packages.cloud.google.com/apt cloud-sdk-{{ ansible_distribution_release }} main'
          state : present
      when: ansible_distribution == 'Ubuntu'

    #UKUU
    - apt_repository:
        repo: ppa:teejee2008/ppa
        codename: bionic

    #GRUB CUSTOMIZER
    - apt_repository:
        repo: ppa:danielrichter2007/grub-customizer
        codename: bionic

    #ETCHER
    - apt_key:
        keyserver: keyserver.ubuntu.com
        id: 379CE192D401AB61
        state: present

    - apt_repository:
          repo: 'deb https://deb.etcher.io stable etcher'
          state : present

    # DROPBOX
    - apt_key:
        keyserver: keyserver.ubuntu.com
        id: 1C61A2656FB57B7E4DE0F4C1FC918B335044912E
        state: present

    - apt_repository:
          repo: 'deb [arch=i386,amd64] http://linux.dropbox.com/ubuntu xenial main'
          state : present

    #BOOT REPAIR
    - apt_repository:
        repo: ppa:yannubuntu/boot-repair
        codename: bionic

    #ADD i386 SUPPORT
    - lineinfile: dest=/var/lib/dpkg/arch line="amd64" create=yes
    - lineinfile: dest=/var/lib/dpkg/arch line="i386" create=yes
      register: add_i386

    #UPDATE - UPGRADE
    - name: Upgrading all packages (Ubuntu/Debian)
      apt:
        upgrade: dist
      when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

    - name: Upgrading all packages (CentOS)
      yum:
        name: '*'
        state: latest
      when: ansible_os_family == "RedHat"

    #INSTALL i386 COMMON PACKAGES 
    - name: Instala paquetes common i386  
      apt: 
        name: "{{ packages }}"
        update_cache: "{{add_i386.changed}}"
      vars:
        packages:
          - libgl1-mesa-dri:i386
          - libgl1-mesa-glx:i386

    #INSTALL COMMON PACKAGES 
    - name: Instala paquetes common
      apt: 
        name: "{{ packages }}"
      vars:
        packages:
          - acl
          - apt-transport-https
          - apt-xapian-index
          - aptitude
          - arc-theme
          - arj
          - atop
          - autoconf
          - automake
          - awscli
          - balena-etcher-electron
          - bc
          - bison
          - boinc-client
          - boinc-manager
          - boinc-screensaver
          - boot-repair
          - brasero-cdrkit
          - browser-plugin-vlc
          - build-essential
          - ca-certificates
          - catfish
          - ccze
          - checkinstall
          - chromium-browser
          - chromium-browser-l10n
          - chromium-codecs-ffmpeg
          - clang
          - cmake
          - cmake-curses-gui
          - collectd
          - compiz
          - compiz-plugins-extra
          - compizconfig-settings-manager
          - curl
          - dbus
          - dconf-editor
          - dconf-tools
          - default-jdk
          - default-jre
          - dia
          - dirmngr
          - dnsmasq
          - docker
          - docker-ce
          - docker-compose
          - dropbox
          - ebtables
          - fdupes
          - figlet
          - file-roller
          - filezilla
          - filezilla-common
          - filezilla-theme-papirus
          - fonts-noto
          - fpc
          - freeglut3
          - fslint
          - g++
          - gcc
          - gdebi
          - gimp
          - gir1.2-clutter-1.0
          - gir1.2-gtop-2.0
          - gir1.2-networkmanager-1.0
          - git
          - git-flow
          - git-ftp
          - git-lfs
          - gnome-shell-extensions
          - gnome-tweak-tool
          - gnupg2
          - golang-go
          - google-cloud-sdk
          - google-cloud-sdk-bigtable-emulator
          - google-cloud-sdk-cbt
          - google-cloud-sdk-cloud-build-local
          - google-cloud-sdk-datalab
          - google-cloud-sdk-app-engine-go
          - google-cloud-sdk-app-engine-java
          - google-cloud-sdk-app-engine-python
          - google-cloud-sdk-app-engine-python-extras
          - google-cloud-sdk-pubsub-emulator
          - google-cloud-sdk-bigtable-emulator
          - google-cloud-sdk-datastore-emulator
          - google-chrome-stable
          - gpick
          - grub-customizer
          - gufw
          - hardinfo
          - hddtemp
          - htop
          - icedtea-plugin
          - iftop
          - intel-microcode
          - iotop
          - iptables-persistent
          - iptstate
          - jq
          - k3b
          - kdeconnect
          - kubectl
          - libavformat-dev
          - libdvd-pkg
          - libegl1-mesa
          - libelf-dev
          - libffi-dev
          - libfile-tee-perl
          - libfreetype6-dev
          - libgdbm-dev
          - libguestfs-perl
          - libjansson-dev
          - liblua5.3-dev
          - libmagic-dev
          - libncurses5-dev
          - libopencv-highgui-dev
          - libpython-dev
          - libportmidi-dev
          - libreadline-dev
          - libswscale-dev
          - libsdl2-image-dev
          - libsqlite3-dev
          - libssl-dev
          - libstdc++5
          - libstdc++6
          - libsvn-java
          - libtool
          - libvirt-bin
          - libvirt-dev
          - libxml-writer-perl
          - libxml2-dev
          - libxslt-dev
          - libyaml-dev
          - linux-generic
          - linux-headers-generic
          - linux-signed-generic
          - linuxbrew-wrapper
          - lldpd
          - lm-sensors
          - lsb-release
          - lshw
          - lxd
          - lxd-client
          - lutris
          - mailutils
          - make
          - meld
          - module-assistant
          - moreutils
          - mpack
          - multipath-tools
          - multitail
          - mysql-workbench
          - mysql-workbench-data
          - nano
          - ncdu
          - netcat
          - netcat-openbsd
          - network-manager-openvpn
          - network-manager-openvpn-gnome
          - nfs-common
          - nfs-kernel-server
          - nmap
          - nmon
          - nodejs
          - ntp
          - ntpdate
          - numix-blue-gtk-theme
          - numix-gtk-theme
          - numix-icon-theme
          - numix-icon-theme-circle
          - numix-icon-theme-square
          - nvidia-cuda-dev
          - nvidia-cuda-toolkit
          - openssh-client
          - openssh-server
          - openvpn
          - p7zip-full
          - p7zip-rar
          - papirus-icon-theme
          - pepperflashplugin-nonfree
          - pgadmin3
          - pigz
          - pkg-config
          - plank
          - playonlinux
          - portaudio19-dev
          - postfix
          - powertop
          - preload
          - psensor
          - pulseaudio-equalizer
          - putty-tools
          - pv
          - python
          - python-dev
          - python-gpg
          - python-pip
          - python-setuptools
          - qemu
          - qemu-kvm
          - quodlibet
          - rar
          - rbenv
          - redshift
          - redshift-gtk
          - rdfind
          - rtl8812au-dkms
          - ruby-dev
          - ruby-full
          - screen
          - sharutils
          - shutter
          - siege
          - smartmontools
          - snapd
          - snmp
          - snmp-mibs-downloader
          - snmpd
          - software-properties-common
          - soundconverter
          - spotify-client
          - ssh-askpass
          - steam-installer
          - stress
          - sublime-merge
          - sublime-text
          - subversion
          - sudo
          - swaks
          - synaptic
          - syncthing
          - sysstat
          - tcpdump
          - telnetd
          - terminator
          - tinyca
          - tmux
          - tor
          - torbrowser-launcher
          - ttf-bitstream-vera
          - ttf-dejavu
          - ttf-mscorefonts-installer
          - ubuntu-restricted-extras
          - ukuu
          - unace
          - unixodbc-dev
          - unrar
          - unzip
          - uuid-runtime
          - vim
          - vim-common
          - vim-gnome
          - vim-gtk
          - vim-gui-common
          - vim-snippets
          - virt-manager
          - virt-viewer
          - virtinst
          - virtualbox-6.0
          - vlc
          - whois
          - wine1.8
          - wine32-development
          - xclip
          - xinetd
          - xserver-xorg
          - xserver-xorg-input-all
          - xserver-xorg-video-all
          - yarn
          - zip
          - zlib1g-dev
          - zsh
        state: present
      register: common-installation
      tags: common

    #Fix locales
    - name: select default locale
      debconf:
        name: locales
        question: locales/default_environment_locale
        value: en_US.UTF-8
        vtype: select
#      notify:
#          - rebuild locales database

    - name: /etc/locale.gen
      lineinfile:
        dest: /etc/locale.gen
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: "{{ item.state }}"
      with_items:
          - { regexp: '^#? ?en_US ISO-8859-1', line: 'en_US ISO-8859-1', state: present }
          - { regexp: '^#? ?en_US.ISO-8859-15 ISO-8859-15', line: 'en_US.ISO-8859-15 ISO-8859-15', state: present }
          - { regexp: '^#? ?en_US.UTF-8 UTF-8', line: 'en_US.UTF-8 UTF-8', state: present }
          - { regexp: '^#? ?es_ES.UTF-8 UTF-8', line: 'es_ES.UTF-8 UTF-8', state: present }
          - { regexp: '^#? ?es_CL.UTF-8 UTF-8', line: 'es_CL.UTF-8 UTF-8', state: present }
#      notify:
#          - rebuild locales database

    #ADITIONALS PACKAGES
    - name: Instala packages adicionales (Ubuntu)
      apt: 
        name: "{{ packages }}"
      vars:
        packages:
          - linux-headers-generic
          - python-packaging
          - language-pack-es
        state: present
      register: common-aditional-installation
      ignore_errors: true
      when: ansible_distribution == 'Ubuntu'

    - name: Instala packages adicionales (Linux Mint)
      apt: 
        name: "{{ packages }}"
      vars:
        packages:
          - mint-meta-codecs
          - mint-meta-mate
          - language-pack-es
          - mate-tweak
        state: present
      register: common-aditional-installation
      ignore_errors: true
      when: ansible_distribution == 'Linux Mint'

    #INSTALL NO PACKAGE SOFTWARE
    ##SOAP UI
    - name: Create Directory for SOAP UI
      file: path=/opt/soapui state=directory mode="a+rw"

    - name: Get SOAP UI.
      get_url:
        url: https://s3.amazonaws.com/downloads.eviware/soapuios/5.5.0/SoapUI-5.5.0-linux-bin.tar.gz
        dest: "/opt/soapui/"
        mode: 0755    

    - name: Verify SOAP UI exists
      stat: path=/opt/soapui/SoapUI-5.5.0-linux-bin.tar.gz
      register: soapui_stat

    - name: Unarchive SOAP UI
      unarchive:
        src: /opt/soapui/SoapUI-5.5.0-linux-bin.tar.gz
        dest: /opt/soapui/
        remote_src: yes

    - name: Configure SOAP UI on system bin.
      file:
        src: "/opt/soapui/SoapUI-5.5.0/bin/soapui.sh"
        dest: "/usr/bin/soapui"
        state: link
      when: soapui_stat.stat.exists

    - name: Configure SOAP UI on system sbin.
      file:
        src: "/opt/soapui/SoapUI-5.5.0/bin/soapui.sh"
        dest: "/usr/sbin/soapui"
        state: link
      when: soapui_stat.stat.exists

    - name: Create Desktop menu file
      copy:
        dest: "/usr/share/applications/SoapUI.desktop"
        content: |
            [Desktop Entry]
            Name=Soap UI
            Exec=/opt/soapui/SoapUI-5.5.0/bin/soapui.sh
            StartupNotify=true
            Terminal=false
            Type=Application
        mode: 0755

    #INSTALL PIPS
    - name: Install Python packages.
      pip:
        name: "{{ packages }}"
      vars:
        packages:
          - pyOpenSSL
          #- awscli
        state: present

    #INSTALL GEMS
    - gem:
        name: 'rake'
        state: present

    - gem:
        name: 'gemspec'
        state: present

    - gem:
        name: 'capistrano'
        state: present

    - gem:
        name: 'capistrano'
        version: 3.4.0
        state: present

    - gem:
        name: 'capistrano-passenger'
        state: present

    - gem:
        name: 'fog'
        version: 1.8
        state: present

    - name: Install the `unattended-upgrades` package
      package:
        name: unattended-upgrades
        state: installed
      when: ansible_os_family == "Debian"

#    - name: Copy the `20auto-upgrades` configuration file
#      copy:
#        src: ../templates/20auto-upgrades.j2
#        dest: /etc/apt/apt.conf.d/20auto-upgrades
#        owner: root
#        group: root
#        mode: 0644
#      when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

    #ENSURE INSTALL IPTABLES
    - name: Install the `iptables` package
      package:
        name: iptables
        state: latest
    - name: Flush existing firewall rules
      iptables:
        flush: true

    #GENERAL RULES
    - name: Firewall rule - allow all loopback traffic
      iptables:
        action: append
        chain: INPUT
        in_interface: lo
        jump: ACCEPT

    - name: Firewall rule - allow established connections
      iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT

    #IP TABLES RULES
    - name: Firewall rule - BLOCK port ping traffic
      iptables:
        chain: INPUT
        jump: ACCEPT
        protocol: icmp

    - name: Firewall rule - allow port 22/SSH traffic
      iptables:
        chain: INPUT
        destination_port: '22'
        jump: ACCEPT
        protocol: tcp

    - name: Firewall rule - allow port Node Exporter 9100 traffic
      iptables:
        chain: INPUT
        destination_port: '9100'
        jump: ACCEPT
        protocol: tcp

    - iptables:
        chain: INPUT
        jump: DROP
        protocol: tcp
        tcp_flags:
          flags: ALL
          flags_set:
            - ACK
            - RST
            - SYN
            - FIN

    # Tag all outbound tcp packets with DSCP DiffServ class CS1
    - iptables:
        chain: OUTPUT
        jump: DSCP
        table: mangle
        set_dscp_mark_class: CS6
        protocol: tcp

    # Set tcp flags
    - iptables:
        chain: OUTPUT
        jump: DROP
        protocol: tcp
        tcp_flags:
          flags: ALL
          flags_set:
            - ACK
            - RST
            - SYN
            - FIN

    #ENABLE IPTABLES PERSISTENCE
    - name: Install `netfilter-persistent` && `iptables-persistent` packages
      package:
        name: "{{item}}"
        state: present
      with_items:
          - iptables-persistent
          - netfilter-persistent
      when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

    #SYSCTL
    ##SyncThing feature
    - sysctl:
        name: fs.inotify.max_user_watches
        value: '204800'
        state: present

    - sysctl:
        name: vm.swappiness
        value: '0'
        state: present

    - sysctl:
        name: fs.file-max
        value: '2097152'
        state: present

    # # Remove kernel.panic entry from /etc/sysctl.conf
    # - sysctl:
    #     name: kernel.panic
    #     state: absent
    #     sysctl_file: /etc/sysctl.conf
    # net.ipv4
    # 
    - sysctl:
        name: net.ipv4.conf.all.rp_filter
        value: '1'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.ipv4.tcp_syncookies
        value: '1'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.ipv4.tcp_tw_reuse
        value: '1'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.ipv4.tcp_fin_timeout
        value: '30'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.ipv4.tcp_keepalive_intvl
        value: '30'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.ipv4.tcp_keepalive_probes
        value: '5'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.ipv4.tcp_max_syn_backlog
        value: '30000'
        sysctl_set: yes
        state: present

    - sysctl:
        name: net.core.somaxconn
        value: '50000'
        sysctl_set: yes
        state: present
        reload: yes

    - sysctl:
        name: net.core.netdev_max_backlog
        value: '5000'
        sysctl_set: yes
        state: present

    # Set ip forwarding on in /proc and in the sysctl file and reload if necessary
    - sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes

    #NTP
    - name: Ensure NTP-related packages are installed.
      package:
        name: ntp
        state: present

    - name: Ensure tzdata package is installed (Linux).
      package:
        name: tzdata
        state: present
      when: ansible_system == "Linux"

    #TZDATA
    - name: set timezone
      timezone:
        name: America/Santiago

    #ULIMIT
    - name: configure system settings, file descriptors and number of threads
      pam_limits:
            domain: '*'
            limit_type: "{{item.limit_type}}"
            limit_item: "{{item.limit_item}}"
            value: "{{item.value}}"
      with_items:
            - { limit_type: '-', limit_item: 'nofile', value: 65536 }
            - { limit_type: '-', limit_item: 'nproc', value: 65536 }
            - { limit_type: 'soft', limit_item: 'nofile', value: 60000 }
            - { limit_type: 'hard', limit_item: 'nofile', value: 524288 }

    - name: reload settings from all system configuration files
      shell: sysctl --system

    #USERS
    #Groups
    - name: group wheel
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: visudo -cf %s

    - name: Install the `sudo` package
      package:
        name: sudo
        state: latest

    #Users
    - name: Add root
      user:
        name: root
        home: /root
        shell: /bin/zsh
        state: present

    - name: group nosu    
      group:
        name: nosu
        state: present
